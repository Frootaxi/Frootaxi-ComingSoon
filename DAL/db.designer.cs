#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="frootaxi_db")]
	public partial class dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertregion(region instance);
    partial void Updateregion(region instance);
    partial void Deleteregion(region instance);
    partial void Insertpayment_account_type(payment_account_type instance);
    partial void Updatepayment_account_type(payment_account_type instance);
    partial void Deletepayment_account_type(payment_account_type instance);
    partial void Insertclient_location(client_location instance);
    partial void Updateclient_location(client_location instance);
    partial void Deleteclient_location(client_location instance);
    partial void Insertcity(city instance);
    partial void Updatecity(city instance);
    partial void Deletecity(city instance);
    partial void Insertsuburb(suburb instance);
    partial void Updatesuburb(suburb instance);
    partial void Deletesuburb(suburb instance);
    partial void Insertarea(area instance);
    partial void Updatearea(area instance);
    partial void Deletearea(area instance);
    partial void Insertclient(client instance);
    partial void Updateclient(client instance);
    partial void Deleteclient(client instance);
    partial void Insertclient_activation_code(client_activation_code instance);
    partial void Updateclient_activation_code(client_activation_code instance);
    partial void Deleteclient_activation_code(client_activation_code instance);
    partial void Insertsubscribe(subscribe instance);
    partial void Updatesubscribe(subscribe instance);
    partial void Deletesubscribe(subscribe instance);
    partial void Insertpromotion_code(promotion_code instance);
    partial void Updatepromotion_code(promotion_code instance);
    partial void Deletepromotion_code(promotion_code instance);
    partial void Insertpackage(package instance);
    partial void Updatepackage(package instance);
    partial void Deletepackage(package instance);
    partial void Inserterror_log(error_log instance);
    partial void Updateerror_log(error_log instance);
    partial void Deleteerror_log(error_log instance);
    partial void Insertemail(email instance);
    partial void Updateemail(email instance);
    partial void Deleteemail(email instance);
    partial void Insertpassword_reset(password_reset instance);
    partial void Updatepassword_reset(password_reset instance);
    partial void Deletepassword_reset(password_reset instance);
    partial void Insertgps_coordinate(gps_coordinate instance);
    partial void Updategps_coordinate(gps_coordinate instance);
    partial void Deletegps_coordinate(gps_coordinate instance);
    partial void Insertrole(role instance);
    partial void Updaterole(role instance);
    partial void Deleterole(role instance);
    partial void Insertprice_matrix(price_matrix instance);
    partial void Updateprice_matrix(price_matrix instance);
    partial void Deleteprice_matrix(price_matrix instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void Inserttrip_detail(trip_detail instance);
    partial void Updatetrip_detail(trip_detail instance);
    partial void Deletetrip_detail(trip_detail instance);
    partial void Inserttrip_type(trip_type instance);
    partial void Updatetrip_type(trip_type instance);
    partial void Deletetrip_type(trip_type instance);
    partial void Insertpayment_account(payment_account instance);
    partial void Updatepayment_account(payment_account instance);
    partial void Deletepayment_account(payment_account instance);
    #endregion
		
		public dbDataContext() : 
				base(global::DAL.Properties.Settings.Default.frootaxi_dbConnectionString4, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<region> regions
		{
			get
			{
				return this.GetTable<region>();
			}
		}
		
		public System.Data.Linq.Table<payment_account_type> payment_account_types
		{
			get
			{
				return this.GetTable<payment_account_type>();
			}
		}
		
		public System.Data.Linq.Table<client_location> client_locations
		{
			get
			{
				return this.GetTable<client_location>();
			}
		}
		
		public System.Data.Linq.Table<city> cities
		{
			get
			{
				return this.GetTable<city>();
			}
		}
		
		public System.Data.Linq.Table<suburb> suburbs
		{
			get
			{
				return this.GetTable<suburb>();
			}
		}
		
		public System.Data.Linq.Table<area> areas
		{
			get
			{
				return this.GetTable<area>();
			}
		}
		
		public System.Data.Linq.Table<landmark> landmarks
		{
			get
			{
				return this.GetTable<landmark>();
			}
		}
		
		public System.Data.Linq.Table<client> clients
		{
			get
			{
				return this.GetTable<client>();
			}
		}
		
		public System.Data.Linq.Table<client_activation_code> client_activation_codes
		{
			get
			{
				return this.GetTable<client_activation_code>();
			}
		}
		
		public System.Data.Linq.Table<subscribe> subscribes
		{
			get
			{
				return this.GetTable<subscribe>();
			}
		}
		
		public System.Data.Linq.Table<promotion_code> promotion_codes
		{
			get
			{
				return this.GetTable<promotion_code>();
			}
		}
		
		public System.Data.Linq.Table<package> packages
		{
			get
			{
				return this.GetTable<package>();
			}
		}
		
		public System.Data.Linq.Table<error_log> error_logs
		{
			get
			{
				return this.GetTable<error_log>();
			}
		}
		
		public System.Data.Linq.Table<email> emails
		{
			get
			{
				return this.GetTable<email>();
			}
		}
		
		public System.Data.Linq.Table<password_reset> password_resets
		{
			get
			{
				return this.GetTable<password_reset>();
			}
		}
		
		public System.Data.Linq.Table<gps_coordinate> gps_coordinates
		{
			get
			{
				return this.GetTable<gps_coordinate>();
			}
		}
		
		public System.Data.Linq.Table<driver_car_gps_mapping> driver_car_gps_mappings
		{
			get
			{
				return this.GetTable<driver_car_gps_mapping>();
			}
		}
		
		public System.Data.Linq.Table<role> roles
		{
			get
			{
				return this.GetTable<role>();
			}
		}
		
		public System.Data.Linq.Table<price_matrix> price_matrixes
		{
			get
			{
				return this.GetTable<price_matrix>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<trip_detail> trip_details
		{
			get
			{
				return this.GetTable<trip_detail>();
			}
		}
		
		public System.Data.Linq.Table<trip_type> trip_types
		{
			get
			{
				return this.GetTable<trip_type>();
			}
		}
		
		public System.Data.Linq.Table<payment_account> payment_accounts
		{
			get
			{
				return this.GetTable<payment_account>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.SendEmail", IsComposable=true)]
		public object SendEmail([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NText")] string my_message, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string my_recipient_email_address, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(50)")] string my_subject, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(20)")] string my_email_format)
		{
			return ((object)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), my_message, my_recipient_email_address, my_subject, my_email_format).ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.region")]
	public partial class region : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<client_location> _client_locations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public region()
		{
			this._client_locations = new EntitySet<client_location>(new Action<client_location>(this.attach_client_locations), new Action<client_location>(this.detach_client_locations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(15)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="region_client_location", Storage="_client_locations", ThisKey="id", OtherKey="region_id")]
		public EntitySet<client_location> client_locations
		{
			get
			{
				return this._client_locations;
			}
			set
			{
				this._client_locations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_client_locations(client_location entity)
		{
			this.SendPropertyChanging();
			entity.region = this;
		}
		
		private void detach_client_locations(client_location entity)
		{
			this.SendPropertyChanging();
			entity.region = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.payment_account_type")]
	public partial class payment_account_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _type;
		
		private EntitySet<payment_account> _payment_accounts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    #endregion
		
		public payment_account_type()
		{
			this._payment_accounts = new EntitySet<payment_account>(new Action<payment_account>(this.attach_payment_accounts), new Action<payment_account>(this.detach_payment_accounts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(20)")]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="payment_account_type_payment_account", Storage="_payment_accounts", ThisKey="id", OtherKey="type_id")]
		public EntitySet<payment_account> payment_accounts
		{
			get
			{
				return this._payment_accounts;
			}
			set
			{
				this._payment_accounts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_payment_accounts(payment_account entity)
		{
			this.SendPropertyChanging();
			entity.payment_account_type = this;
		}
		
		private void detach_payment_accounts(payment_account entity)
		{
			this.SendPropertyChanging();
			entity.payment_account_type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.client_location")]
	public partial class client_location : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _region_id;
		
		private System.Nullable<int> _city_id;
		
		private System.Nullable<int> _suburb_id;
		
		private System.Nullable<int> _area_id;
		
		private System.Nullable<int> _landmark_id;
		
		private string _gps_coordinate;
		
		private EntitySet<client> _clients;
		
		private EntityRef<region> _region;
		
		private EntityRef<city> _city;
		
		private EntityRef<suburb> _suburb;
		
		private EntityRef<area> _area;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onregion_idChanging(System.Nullable<int> value);
    partial void Onregion_idChanged();
    partial void Oncity_idChanging(System.Nullable<int> value);
    partial void Oncity_idChanged();
    partial void Onsuburb_idChanging(System.Nullable<int> value);
    partial void Onsuburb_idChanged();
    partial void Onarea_idChanging(System.Nullable<int> value);
    partial void Onarea_idChanged();
    partial void Onlandmark_idChanging(System.Nullable<int> value);
    partial void Onlandmark_idChanged();
    partial void Ongps_coordinateChanging(string value);
    partial void Ongps_coordinateChanged();
    #endregion
		
		public client_location()
		{
			this._clients = new EntitySet<client>(new Action<client>(this.attach_clients), new Action<client>(this.detach_clients));
			this._region = default(EntityRef<region>);
			this._city = default(EntityRef<city>);
			this._suburb = default(EntityRef<suburb>);
			this._area = default(EntityRef<area>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_region_id", DbType="Int")]
		public System.Nullable<int> region_id
		{
			get
			{
				return this._region_id;
			}
			set
			{
				if ((this._region_id != value))
				{
					if (this._region.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onregion_idChanging(value);
					this.SendPropertyChanging();
					this._region_id = value;
					this.SendPropertyChanged("region_id");
					this.Onregion_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_id", DbType="Int")]
		public System.Nullable<int> city_id
		{
			get
			{
				return this._city_id;
			}
			set
			{
				if ((this._city_id != value))
				{
					if (this._city.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncity_idChanging(value);
					this.SendPropertyChanging();
					this._city_id = value;
					this.SendPropertyChanged("city_id");
					this.Oncity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_suburb_id", DbType="Int")]
		public System.Nullable<int> suburb_id
		{
			get
			{
				return this._suburb_id;
			}
			set
			{
				if ((this._suburb_id != value))
				{
					if (this._suburb.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsuburb_idChanging(value);
					this.SendPropertyChanging();
					this._suburb_id = value;
					this.SendPropertyChanged("suburb_id");
					this.Onsuburb_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_area_id", DbType="Int")]
		public System.Nullable<int> area_id
		{
			get
			{
				return this._area_id;
			}
			set
			{
				if ((this._area_id != value))
				{
					if (this._area.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onarea_idChanging(value);
					this.SendPropertyChanging();
					this._area_id = value;
					this.SendPropertyChanged("area_id");
					this.Onarea_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_landmark_id", DbType="Int")]
		public System.Nullable<int> landmark_id
		{
			get
			{
				return this._landmark_id;
			}
			set
			{
				if ((this._landmark_id != value))
				{
					this.Onlandmark_idChanging(value);
					this.SendPropertyChanging();
					this._landmark_id = value;
					this.SendPropertyChanged("landmark_id");
					this.Onlandmark_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gps_coordinate", DbType="NChar(100)")]
		public string gps_coordinate
		{
			get
			{
				return this._gps_coordinate;
			}
			set
			{
				if ((this._gps_coordinate != value))
				{
					this.Ongps_coordinateChanging(value);
					this.SendPropertyChanging();
					this._gps_coordinate = value;
					this.SendPropertyChanged("gps_coordinate");
					this.Ongps_coordinateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_location_client", Storage="_clients", ThisKey="id", OtherKey="location_id")]
		public EntitySet<client> clients
		{
			get
			{
				return this._clients;
			}
			set
			{
				this._clients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="region_client_location", Storage="_region", ThisKey="region_id", OtherKey="id", IsForeignKey=true)]
		public region region
		{
			get
			{
				return this._region.Entity;
			}
			set
			{
				region previousValue = this._region.Entity;
				if (((previousValue != value) 
							|| (this._region.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._region.Entity = null;
						previousValue.client_locations.Remove(this);
					}
					this._region.Entity = value;
					if ((value != null))
					{
						value.client_locations.Add(this);
						this._region_id = value.id;
					}
					else
					{
						this._region_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("region");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="city_client_location", Storage="_city", ThisKey="city_id", OtherKey="id", IsForeignKey=true)]
		public city city
		{
			get
			{
				return this._city.Entity;
			}
			set
			{
				city previousValue = this._city.Entity;
				if (((previousValue != value) 
							|| (this._city.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._city.Entity = null;
						previousValue.client_locations.Remove(this);
					}
					this._city.Entity = value;
					if ((value != null))
					{
						value.client_locations.Add(this);
						this._city_id = value.id;
					}
					else
					{
						this._city_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("city");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="suburb_client_location", Storage="_suburb", ThisKey="suburb_id", OtherKey="id", IsForeignKey=true)]
		public suburb suburb
		{
			get
			{
				return this._suburb.Entity;
			}
			set
			{
				suburb previousValue = this._suburb.Entity;
				if (((previousValue != value) 
							|| (this._suburb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._suburb.Entity = null;
						previousValue.client_locations.Remove(this);
					}
					this._suburb.Entity = value;
					if ((value != null))
					{
						value.client_locations.Add(this);
						this._suburb_id = value.id;
					}
					else
					{
						this._suburb_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("suburb");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="area_client_location", Storage="_area", ThisKey="area_id", OtherKey="id", IsForeignKey=true)]
		public area area
		{
			get
			{
				return this._area.Entity;
			}
			set
			{
				area previousValue = this._area.Entity;
				if (((previousValue != value) 
							|| (this._area.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._area.Entity = null;
						previousValue.client_locations.Remove(this);
					}
					this._area.Entity = value;
					if ((value != null))
					{
						value.client_locations.Add(this);
						this._area_id = value.id;
					}
					else
					{
						this._area_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("area");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_clients(client entity)
		{
			this.SendPropertyChanging();
			entity.client_location = this;
		}
		
		private void detach_clients(client entity)
		{
			this.SendPropertyChanging();
			entity.client_location = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.city")]
	public partial class city : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<client_location> _client_locations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public city()
		{
			this._client_locations = new EntitySet<client_location>(new Action<client_location>(this.attach_client_locations), new Action<client_location>(this.detach_client_locations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(25)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="city_client_location", Storage="_client_locations", ThisKey="id", OtherKey="city_id")]
		public EntitySet<client_location> client_locations
		{
			get
			{
				return this._client_locations;
			}
			set
			{
				this._client_locations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_client_locations(client_location entity)
		{
			this.SendPropertyChanging();
			entity.city = this;
		}
		
		private void detach_client_locations(client_location entity)
		{
			this.SendPropertyChanging();
			entity.city = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.suburb")]
	public partial class suburb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<client_location> _client_locations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public suburb()
		{
			this._client_locations = new EntitySet<client_location>(new Action<client_location>(this.attach_client_locations), new Action<client_location>(this.detach_client_locations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(25)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="suburb_client_location", Storage="_client_locations", ThisKey="id", OtherKey="suburb_id")]
		public EntitySet<client_location> client_locations
		{
			get
			{
				return this._client_locations;
			}
			set
			{
				this._client_locations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_client_locations(client_location entity)
		{
			this.SendPropertyChanging();
			entity.suburb = this;
		}
		
		private void detach_client_locations(client_location entity)
		{
			this.SendPropertyChanging();
			entity.suburb = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.area")]
	public partial class area : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<client_location> _client_locations;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public area()
		{
			this._client_locations = new EntitySet<client_location>(new Action<client_location>(this.attach_client_locations), new Action<client_location>(this.detach_client_locations));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(25)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="area_client_location", Storage="_client_locations", ThisKey="id", OtherKey="area_id")]
		public EntitySet<client_location> client_locations
		{
			get
			{
				return this._client_locations;
			}
			set
			{
				this._client_locations.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_client_locations(client_location entity)
		{
			this.SendPropertyChanging();
			entity.area = this;
		}
		
		private void detach_client_locations(client_location entity)
		{
			this.SendPropertyChanging();
			entity.area = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.landmark")]
	public partial class landmark
	{
		
		private int _id;
		
		private string _name;
		
		public landmark()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this._name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.client")]
	public partial class client : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _first_name;
		
		private string _last_name;
		
		private System.Nullable<int> _location_id;
		
		private System.Nullable<int> _payment_account_id;
		
		private System.Nullable<System.DateTime> _date_time_stamp;
		
		private EntitySet<client_activation_code> _client_activation_codes;
		
		private EntitySet<user> _users;
		
		private EntityRef<client_location> _client_location;
		
		private EntityRef<payment_account> _payment_account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void Onlocation_idChanging(System.Nullable<int> value);
    partial void Onlocation_idChanged();
    partial void Onpayment_account_idChanging(System.Nullable<int> value);
    partial void Onpayment_account_idChanged();
    partial void Ondate_time_stampChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_time_stampChanged();
    #endregion
		
		public client()
		{
			this._client_activation_codes = new EntitySet<client_activation_code>(new Action<client_activation_code>(this.attach_client_activation_codes), new Action<client_activation_code>(this.detach_client_activation_codes));
			this._users = new EntitySet<user>(new Action<user>(this.attach_users), new Action<user>(this.detach_users));
			this._client_location = default(EntityRef<client_location>);
			this._payment_account = default(EntityRef<payment_account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="VarChar(50)")]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="VarChar(50)")]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_id", DbType="Int")]
		public System.Nullable<int> location_id
		{
			get
			{
				return this._location_id;
			}
			set
			{
				if ((this._location_id != value))
				{
					if (this._client_location.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlocation_idChanging(value);
					this.SendPropertyChanging();
					this._location_id = value;
					this.SendPropertyChanged("location_id");
					this.Onlocation_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_account_id", DbType="Int")]
		public System.Nullable<int> payment_account_id
		{
			get
			{
				return this._payment_account_id;
			}
			set
			{
				if ((this._payment_account_id != value))
				{
					if (this._payment_account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpayment_account_idChanging(value);
					this.SendPropertyChanging();
					this._payment_account_id = value;
					this.SendPropertyChanged("payment_account_id");
					this.Onpayment_account_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_time_stamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_time_stamp
		{
			get
			{
				return this._date_time_stamp;
			}
			set
			{
				if ((this._date_time_stamp != value))
				{
					this.Ondate_time_stampChanging(value);
					this.SendPropertyChanging();
					this._date_time_stamp = value;
					this.SendPropertyChanged("date_time_stamp");
					this.Ondate_time_stampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_client_activation_code", Storage="_client_activation_codes", ThisKey="id", OtherKey="client_id")]
		public EntitySet<client_activation_code> client_activation_codes
		{
			get
			{
				return this._client_activation_codes;
			}
			set
			{
				this._client_activation_codes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_user", Storage="_users", ThisKey="id", OtherKey="client_id")]
		public EntitySet<user> users
		{
			get
			{
				return this._users;
			}
			set
			{
				this._users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_location_client", Storage="_client_location", ThisKey="location_id", OtherKey="id", IsForeignKey=true)]
		public client_location client_location
		{
			get
			{
				return this._client_location.Entity;
			}
			set
			{
				client_location previousValue = this._client_location.Entity;
				if (((previousValue != value) 
							|| (this._client_location.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._client_location.Entity = null;
						previousValue.clients.Remove(this);
					}
					this._client_location.Entity = value;
					if ((value != null))
					{
						value.clients.Add(this);
						this._location_id = value.id;
					}
					else
					{
						this._location_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("client_location");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="payment_account_client", Storage="_payment_account", ThisKey="payment_account_id", OtherKey="id", IsForeignKey=true)]
		public payment_account payment_account
		{
			get
			{
				return this._payment_account.Entity;
			}
			set
			{
				payment_account previousValue = this._payment_account.Entity;
				if (((previousValue != value) 
							|| (this._payment_account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._payment_account.Entity = null;
						previousValue.clients.Remove(this);
					}
					this._payment_account.Entity = value;
					if ((value != null))
					{
						value.clients.Add(this);
						this._payment_account_id = value.id;
					}
					else
					{
						this._payment_account_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("payment_account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_client_activation_codes(client_activation_code entity)
		{
			this.SendPropertyChanging();
			entity.client = this;
		}
		
		private void detach_client_activation_codes(client_activation_code entity)
		{
			this.SendPropertyChanging();
			entity.client = null;
		}
		
		private void attach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.client = this;
		}
		
		private void detach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.client = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.client_activation_code")]
	public partial class client_activation_code : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _client_id;
		
		private string _mobile_activation_code;
		
		private string _email_activation_code;
		
		private System.Nullable<int> _activated_mobile;
		
		private System.Nullable<int> _activated_email;
		
		private System.Nullable<System.DateTime> _date_time_stamp;
		
		private EntityRef<client> _client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onclient_idChanging(int value);
    partial void Onclient_idChanged();
    partial void Onmobile_activation_codeChanging(string value);
    partial void Onmobile_activation_codeChanged();
    partial void Onemail_activation_codeChanging(string value);
    partial void Onemail_activation_codeChanged();
    partial void Onactivated_mobileChanging(System.Nullable<int> value);
    partial void Onactivated_mobileChanged();
    partial void Onactivated_emailChanging(System.Nullable<int> value);
    partial void Onactivated_emailChanged();
    partial void Ondate_time_stampChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_time_stampChanged();
    #endregion
		
		public client_activation_code()
		{
			this._client = default(EntityRef<client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int client_id
		{
			get
			{
				return this._client_id;
			}
			set
			{
				if ((this._client_id != value))
				{
					if (this._client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onclient_idChanging(value);
					this.SendPropertyChanging();
					this._client_id = value;
					this.SendPropertyChanged("client_id");
					this.Onclient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mobile_activation_code", DbType="VarChar(4)")]
		public string mobile_activation_code
		{
			get
			{
				return this._mobile_activation_code;
			}
			set
			{
				if ((this._mobile_activation_code != value))
				{
					this.Onmobile_activation_codeChanging(value);
					this.SendPropertyChanging();
					this._mobile_activation_code = value;
					this.SendPropertyChanged("mobile_activation_code");
					this.Onmobile_activation_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_activation_code", DbType="VarChar(50)")]
		public string email_activation_code
		{
			get
			{
				return this._email_activation_code;
			}
			set
			{
				if ((this._email_activation_code != value))
				{
					this.Onemail_activation_codeChanging(value);
					this.SendPropertyChanging();
					this._email_activation_code = value;
					this.SendPropertyChanged("email_activation_code");
					this.Onemail_activation_codeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activated_mobile", DbType="Int")]
		public System.Nullable<int> activated_mobile
		{
			get
			{
				return this._activated_mobile;
			}
			set
			{
				if ((this._activated_mobile != value))
				{
					this.Onactivated_mobileChanging(value);
					this.SendPropertyChanging();
					this._activated_mobile = value;
					this.SendPropertyChanged("activated_mobile");
					this.Onactivated_mobileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activated_email", DbType="Int")]
		public System.Nullable<int> activated_email
		{
			get
			{
				return this._activated_email;
			}
			set
			{
				if ((this._activated_email != value))
				{
					this.Onactivated_emailChanging(value);
					this.SendPropertyChanging();
					this._activated_email = value;
					this.SendPropertyChanged("activated_email");
					this.Onactivated_emailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_time_stamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_time_stamp
		{
			get
			{
				return this._date_time_stamp;
			}
			set
			{
				if ((this._date_time_stamp != value))
				{
					this.Ondate_time_stampChanging(value);
					this.SendPropertyChanging();
					this._date_time_stamp = value;
					this.SendPropertyChanged("date_time_stamp");
					this.Ondate_time_stampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_client_activation_code", Storage="_client", ThisKey="client_id", OtherKey="id", IsForeignKey=true)]
		public client client
		{
			get
			{
				return this._client.Entity;
			}
			set
			{
				client previousValue = this._client.Entity;
				if (((previousValue != value) 
							|| (this._client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._client.Entity = null;
						previousValue.client_activation_codes.Remove(this);
					}
					this._client.Entity = value;
					if ((value != null))
					{
						value.client_activation_codes.Add(this);
						this._client_id = value.id;
					}
					else
					{
						this._client_id = default(int);
					}
					this.SendPropertyChanged("client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.subscribe")]
	public partial class subscribe : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _email_address;
		
		private System.DateTime _date_time_stamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onemail_addressChanging(string value);
    partial void Onemail_addressChanged();
    partial void Ondate_time_stampChanging(System.DateTime value);
    partial void Ondate_time_stampChanged();
    #endregion
		
		public subscribe()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_address", DbType="VarChar(40)")]
		public string email_address
		{
			get
			{
				return this._email_address;
			}
			set
			{
				if ((this._email_address != value))
				{
					this.Onemail_addressChanging(value);
					this.SendPropertyChanging();
					this._email_address = value;
					this.SendPropertyChanged("email_address");
					this.Onemail_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_time_stamp", DbType="DateTime NOT NULL")]
		public System.DateTime date_time_stamp
		{
			get
			{
				return this._date_time_stamp;
			}
			set
			{
				if ((this._date_time_stamp != value))
				{
					this.Ondate_time_stampChanging(value);
					this.SendPropertyChanging();
					this._date_time_stamp = value;
					this.SendPropertyChanged("date_time_stamp");
					this.Ondate_time_stampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.promotion_code")]
	public partial class promotion_code : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _code;
		
		private string _name;
		
		private string _description;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public promotion_code()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(50)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.package")]
	public partial class package : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<decimal> _cost;
		
		private System.Nullable<int> _trip_number;
		
		private System.Nullable<decimal> _trip_maximum_cost;
		
		private System.Nullable<int> _free_trip_number;
		
		private System.Nullable<decimal> _free_trip_maximum_cost;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncostChanging(System.Nullable<decimal> value);
    partial void OncostChanged();
    partial void Ontrip_numberChanging(System.Nullable<int> value);
    partial void Ontrip_numberChanged();
    partial void Ontrip_maximum_costChanging(System.Nullable<decimal> value);
    partial void Ontrip_maximum_costChanged();
    partial void Onfree_trip_numberChanging(System.Nullable<int> value);
    partial void Onfree_trip_numberChanged();
    partial void Onfree_trip_maximum_costChanging(System.Nullable<decimal> value);
    partial void Onfree_trip_maximum_costChanged();
    #endregion
		
		public package()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost", DbType="Money")]
		public System.Nullable<decimal> cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trip_number", DbType="Int")]
		public System.Nullable<int> trip_number
		{
			get
			{
				return this._trip_number;
			}
			set
			{
				if ((this._trip_number != value))
				{
					this.Ontrip_numberChanging(value);
					this.SendPropertyChanging();
					this._trip_number = value;
					this.SendPropertyChanged("trip_number");
					this.Ontrip_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trip_maximum_cost", DbType="Money")]
		public System.Nullable<decimal> trip_maximum_cost
		{
			get
			{
				return this._trip_maximum_cost;
			}
			set
			{
				if ((this._trip_maximum_cost != value))
				{
					this.Ontrip_maximum_costChanging(value);
					this.SendPropertyChanging();
					this._trip_maximum_cost = value;
					this.SendPropertyChanged("trip_maximum_cost");
					this.Ontrip_maximum_costChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_free_trip_number", DbType="Int")]
		public System.Nullable<int> free_trip_number
		{
			get
			{
				return this._free_trip_number;
			}
			set
			{
				if ((this._free_trip_number != value))
				{
					this.Onfree_trip_numberChanging(value);
					this.SendPropertyChanging();
					this._free_trip_number = value;
					this.SendPropertyChanged("free_trip_number");
					this.Onfree_trip_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_free_trip_maximum_cost", DbType="Money")]
		public System.Nullable<decimal> free_trip_maximum_cost
		{
			get
			{
				return this._free_trip_maximum_cost;
			}
			set
			{
				if ((this._free_trip_maximum_cost != value))
				{
					this.Onfree_trip_maximum_costChanging(value);
					this.SendPropertyChanging();
					this._free_trip_maximum_cost = value;
					this.SendPropertyChanged("free_trip_maximum_cost");
					this.Onfree_trip_maximum_costChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.error_log")]
	public partial class error_log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _client_id;
		
		private string _source_of_error;
		
		private string _location_of_source;
		
		private string _error_message;
		
		private System.Nullable<bool> _notification_message_sent;
		
		private System.Nullable<System.DateTime> _date_time_stamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onclient_idChanging(System.Nullable<int> value);
    partial void Onclient_idChanged();
    partial void Onsource_of_errorChanging(string value);
    partial void Onsource_of_errorChanged();
    partial void Onlocation_of_sourceChanging(string value);
    partial void Onlocation_of_sourceChanged();
    partial void Onerror_messageChanging(string value);
    partial void Onerror_messageChanged();
    partial void Onnotification_message_sentChanging(System.Nullable<bool> value);
    partial void Onnotification_message_sentChanged();
    partial void Ondate_time_stampChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_time_stampChanged();
    #endregion
		
		public error_log()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_id", DbType="Int")]
		public System.Nullable<int> client_id
		{
			get
			{
				return this._client_id;
			}
			set
			{
				if ((this._client_id != value))
				{
					this.Onclient_idChanging(value);
					this.SendPropertyChanging();
					this._client_id = value;
					this.SendPropertyChanged("client_id");
					this.Onclient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_source_of_error", DbType="VarChar(50)")]
		public string source_of_error
		{
			get
			{
				return this._source_of_error;
			}
			set
			{
				if ((this._source_of_error != value))
				{
					this.Onsource_of_errorChanging(value);
					this.SendPropertyChanging();
					this._source_of_error = value;
					this.SendPropertyChanged("source_of_error");
					this.Onsource_of_errorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location_of_source", DbType="VarChar(50)")]
		public string location_of_source
		{
			get
			{
				return this._location_of_source;
			}
			set
			{
				if ((this._location_of_source != value))
				{
					this.Onlocation_of_sourceChanging(value);
					this.SendPropertyChanging();
					this._location_of_source = value;
					this.SendPropertyChanged("location_of_source");
					this.Onlocation_of_sourceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_error_message", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string error_message
		{
			get
			{
				return this._error_message;
			}
			set
			{
				if ((this._error_message != value))
				{
					this.Onerror_messageChanging(value);
					this.SendPropertyChanging();
					this._error_message = value;
					this.SendPropertyChanged("error_message");
					this.Onerror_messageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notification_message_sent", DbType="Bit")]
		public System.Nullable<bool> notification_message_sent
		{
			get
			{
				return this._notification_message_sent;
			}
			set
			{
				if ((this._notification_message_sent != value))
				{
					this.Onnotification_message_sentChanging(value);
					this.SendPropertyChanging();
					this._notification_message_sent = value;
					this.SendPropertyChanged("notification_message_sent");
					this.Onnotification_message_sentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_time_stamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_time_stamp
		{
			get
			{
				return this._date_time_stamp;
			}
			set
			{
				if ((this._date_time_stamp != value))
				{
					this.Ondate_time_stampChanging(value);
					this.SendPropertyChanging();
					this._date_time_stamp = value;
					this.SendPropertyChanged("date_time_stamp");
					this.Ondate_time_stampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.email")]
	public partial class email : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _recipient_email_address;
		
		private string _message;
		
		private System.Nullable<System.DateTime> _time_entered_in_db;
		
		private string _subject;
		
		private string _message_format;
		
		private System.Nullable<bool> _email_sent;
		
		private System.Nullable<System.DateTime> _time_sent;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onrecipient_email_addressChanging(string value);
    partial void Onrecipient_email_addressChanged();
    partial void OnmessageChanging(string value);
    partial void OnmessageChanged();
    partial void Ontime_entered_in_dbChanging(System.Nullable<System.DateTime> value);
    partial void Ontime_entered_in_dbChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void Onmessage_formatChanging(string value);
    partial void Onmessage_formatChanged();
    partial void Onemail_sentChanging(System.Nullable<bool> value);
    partial void Onemail_sentChanged();
    partial void Ontime_sentChanging(System.Nullable<System.DateTime> value);
    partial void Ontime_sentChanged();
    #endregion
		
		public email()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recipient_email_address", DbType="VarChar(50)")]
		public string recipient_email_address
		{
			get
			{
				return this._recipient_email_address;
			}
			set
			{
				if ((this._recipient_email_address != value))
				{
					this.Onrecipient_email_addressChanging(value);
					this.SendPropertyChanging();
					this._recipient_email_address = value;
					this.SendPropertyChanged("recipient_email_address");
					this.Onrecipient_email_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string message
		{
			get
			{
				return this._message;
			}
			set
			{
				if ((this._message != value))
				{
					this.OnmessageChanging(value);
					this.SendPropertyChanging();
					this._message = value;
					this.SendPropertyChanged("message");
					this.OnmessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_entered_in_db", DbType="DateTime")]
		public System.Nullable<System.DateTime> time_entered_in_db
		{
			get
			{
				return this._time_entered_in_db;
			}
			set
			{
				if ((this._time_entered_in_db != value))
				{
					this.Ontime_entered_in_dbChanging(value);
					this.SendPropertyChanging();
					this._time_entered_in_db = value;
					this.SendPropertyChanged("time_entered_in_db");
					this.Ontime_entered_in_dbChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="VarChar(50)")]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_message_format", DbType="VarChar(20)")]
		public string message_format
		{
			get
			{
				return this._message_format;
			}
			set
			{
				if ((this._message_format != value))
				{
					this.Onmessage_formatChanging(value);
					this.SendPropertyChanging();
					this._message_format = value;
					this.SendPropertyChanged("message_format");
					this.Onmessage_formatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_sent", DbType="Bit")]
		public System.Nullable<bool> email_sent
		{
			get
			{
				return this._email_sent;
			}
			set
			{
				if ((this._email_sent != value))
				{
					this.Onemail_sentChanging(value);
					this.SendPropertyChanging();
					this._email_sent = value;
					this.SendPropertyChanged("email_sent");
					this.Onemail_sentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time_sent", DbType="DateTime")]
		public System.Nullable<System.DateTime> time_sent
		{
			get
			{
				return this._time_sent;
			}
			set
			{
				if ((this._time_sent != value))
				{
					this.Ontime_sentChanging(value);
					this.SendPropertyChanging();
					this._time_sent = value;
					this.SendPropertyChanged("time_sent");
					this.Ontime_sentChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.password_reset")]
	public partial class password_reset : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _client_id;
		
		private System.Nullable<System.DateTime> _expiration_date;
		
		private string _password_reset_token;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onclient_idChanging(int value);
    partial void Onclient_idChanged();
    partial void Onexpiration_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onexpiration_dateChanged();
    partial void Onpassword_reset_tokenChanging(string value);
    partial void Onpassword_reset_tokenChanged();
    #endregion
		
		public password_reset()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int client_id
		{
			get
			{
				return this._client_id;
			}
			set
			{
				if ((this._client_id != value))
				{
					this.Onclient_idChanging(value);
					this.SendPropertyChanging();
					this._client_id = value;
					this.SendPropertyChanged("client_id");
					this.Onclient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expiration_date", DbType="DateTime")]
		public System.Nullable<System.DateTime> expiration_date
		{
			get
			{
				return this._expiration_date;
			}
			set
			{
				if ((this._expiration_date != value))
				{
					this.Onexpiration_dateChanging(value);
					this.SendPropertyChanging();
					this._expiration_date = value;
					this.SendPropertyChanged("expiration_date");
					this.Onexpiration_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password_reset_token", DbType="VarChar(50)")]
		public string password_reset_token
		{
			get
			{
				return this._password_reset_token;
			}
			set
			{
				if ((this._password_reset_token != value))
				{
					this.Onpassword_reset_tokenChanging(value);
					this.SendPropertyChanging();
					this._password_reset_token = value;
					this.SendPropertyChanged("password_reset_token");
					this.Onpassword_reset_tokenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.gps_coordinate")]
	public partial class gps_coordinate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _msisdn;
		
		private string _gps_imei;
		
		private string _gps_serial_number;
		
		private System.Nullable<double> _latitude;
		
		private System.Nullable<double> _longitude;
		
		private System.Nullable<System.DateTime> _date_time_stamp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnmsisdnChanging(string value);
    partial void OnmsisdnChanged();
    partial void Ongps_imeiChanging(string value);
    partial void Ongps_imeiChanged();
    partial void Ongps_serial_numberChanging(string value);
    partial void Ongps_serial_numberChanged();
    partial void OnlatitudeChanging(System.Nullable<double> value);
    partial void OnlatitudeChanged();
    partial void OnlongitudeChanging(System.Nullable<double> value);
    partial void OnlongitudeChanged();
    partial void Ondate_time_stampChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_time_stampChanged();
    #endregion
		
		public gps_coordinate()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msisdn", DbType="VarChar(12)")]
		public string msisdn
		{
			get
			{
				return this._msisdn;
			}
			set
			{
				if ((this._msisdn != value))
				{
					this.OnmsisdnChanging(value);
					this.SendPropertyChanging();
					this._msisdn = value;
					this.SendPropertyChanged("msisdn");
					this.OnmsisdnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gps_imei", DbType="NChar(15)")]
		public string gps_imei
		{
			get
			{
				return this._gps_imei;
			}
			set
			{
				if ((this._gps_imei != value))
				{
					this.Ongps_imeiChanging(value);
					this.SendPropertyChanging();
					this._gps_imei = value;
					this.SendPropertyChanged("gps_imei");
					this.Ongps_imeiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gps_serial_number", DbType="NChar(12)")]
		public string gps_serial_number
		{
			get
			{
				return this._gps_serial_number;
			}
			set
			{
				if ((this._gps_serial_number != value))
				{
					this.Ongps_serial_numberChanging(value);
					this.SendPropertyChanging();
					this._gps_serial_number = value;
					this.SendPropertyChanged("gps_serial_number");
					this.Ongps_serial_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitude", DbType="Float")]
		public System.Nullable<double> latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longitude", DbType="Float")]
		public System.Nullable<double> longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_time_stamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> date_time_stamp
		{
			get
			{
				return this._date_time_stamp;
			}
			set
			{
				if ((this._date_time_stamp != value))
				{
					this.Ondate_time_stampChanging(value);
					this.SendPropertyChanging();
					this._date_time_stamp = value;
					this.SendPropertyChanged("date_time_stamp");
					this.Ondate_time_stampChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.driver_car_gps_mapping")]
	public partial class driver_car_gps_mapping
	{
		
		private int _client_id;
		
		private System.Nullable<int> _car_id;
		
		private string _gps_imei;
		
		private string _msisdn;
		
		public driver_car_gps_mapping()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_id", DbType="Int NOT NULL")]
		public int client_id
		{
			get
			{
				return this._client_id;
			}
			set
			{
				if ((this._client_id != value))
				{
					this._client_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_id", DbType="Int")]
		public System.Nullable<int> car_id
		{
			get
			{
				return this._car_id;
			}
			set
			{
				if ((this._car_id != value))
				{
					this._car_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gps_imei", DbType="NChar(15)")]
		public string gps_imei
		{
			get
			{
				return this._gps_imei;
			}
			set
			{
				if ((this._gps_imei != value))
				{
					this._gps_imei = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_msisdn", DbType="VarChar(12)")]
		public string msisdn
		{
			get
			{
				return this._msisdn;
			}
			set
			{
				if ((this._msisdn != value))
				{
					this._msisdn = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.role")]
	public partial class role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<user> _users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public role()
		{
			this._users = new EntitySet<user>(new Action<user>(this.attach_users), new Action<user>(this.detach_users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(20)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="role_user", Storage="_users", ThisKey="id", OtherKey="role_id")]
		public EntitySet<user> users
		{
			get
			{
				return this._users;
			}
			set
			{
				this._users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.role = this;
		}
		
		private void detach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.price_matrix")]
	public partial class price_matrix : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.TimeSpan> _off_peak_start_time;
		
		private System.Nullable<System.TimeSpan> _off_peak_end_time;
		
		private System.Nullable<System.TimeSpan> _peak_start_time;
		
		private System.Nullable<System.TimeSpan> _peak_end_time;
		
		private System.Nullable<decimal> _off_peak_cost;
		
		private System.Nullable<decimal> _peak_cost;
		
		private System.Nullable<decimal> _weekend_cost;
		
		private System.Nullable<decimal> _midnight_cost;
		
		private string _start_coord;
		
		private string _end_coord;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onoff_peak_start_timeChanging(System.Nullable<System.TimeSpan> value);
    partial void Onoff_peak_start_timeChanged();
    partial void Onoff_peak_end_timeChanging(System.Nullable<System.TimeSpan> value);
    partial void Onoff_peak_end_timeChanged();
    partial void Onpeak_start_timeChanging(System.Nullable<System.TimeSpan> value);
    partial void Onpeak_start_timeChanged();
    partial void Onpeak_end_timeChanging(System.Nullable<System.TimeSpan> value);
    partial void Onpeak_end_timeChanged();
    partial void Onoff_peak_costChanging(System.Nullable<decimal> value);
    partial void Onoff_peak_costChanged();
    partial void Onpeak_costChanging(System.Nullable<decimal> value);
    partial void Onpeak_costChanged();
    partial void Onweekend_costChanging(System.Nullable<decimal> value);
    partial void Onweekend_costChanged();
    partial void Onmidnight_costChanging(System.Nullable<decimal> value);
    partial void Onmidnight_costChanged();
    partial void Onstart_coordChanging(string value);
    partial void Onstart_coordChanged();
    partial void Onend_coordChanging(string value);
    partial void Onend_coordChanged();
    #endregion
		
		public price_matrix()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_off_peak_start_time", DbType="Time")]
		public System.Nullable<System.TimeSpan> off_peak_start_time
		{
			get
			{
				return this._off_peak_start_time;
			}
			set
			{
				if ((this._off_peak_start_time != value))
				{
					this.Onoff_peak_start_timeChanging(value);
					this.SendPropertyChanging();
					this._off_peak_start_time = value;
					this.SendPropertyChanged("off_peak_start_time");
					this.Onoff_peak_start_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_off_peak_end_time", DbType="Time")]
		public System.Nullable<System.TimeSpan> off_peak_end_time
		{
			get
			{
				return this._off_peak_end_time;
			}
			set
			{
				if ((this._off_peak_end_time != value))
				{
					this.Onoff_peak_end_timeChanging(value);
					this.SendPropertyChanging();
					this._off_peak_end_time = value;
					this.SendPropertyChanged("off_peak_end_time");
					this.Onoff_peak_end_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_peak_start_time", DbType="Time")]
		public System.Nullable<System.TimeSpan> peak_start_time
		{
			get
			{
				return this._peak_start_time;
			}
			set
			{
				if ((this._peak_start_time != value))
				{
					this.Onpeak_start_timeChanging(value);
					this.SendPropertyChanging();
					this._peak_start_time = value;
					this.SendPropertyChanged("peak_start_time");
					this.Onpeak_start_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_peak_end_time", DbType="Time")]
		public System.Nullable<System.TimeSpan> peak_end_time
		{
			get
			{
				return this._peak_end_time;
			}
			set
			{
				if ((this._peak_end_time != value))
				{
					this.Onpeak_end_timeChanging(value);
					this.SendPropertyChanging();
					this._peak_end_time = value;
					this.SendPropertyChanged("peak_end_time");
					this.Onpeak_end_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_off_peak_cost", DbType="Money")]
		public System.Nullable<decimal> off_peak_cost
		{
			get
			{
				return this._off_peak_cost;
			}
			set
			{
				if ((this._off_peak_cost != value))
				{
					this.Onoff_peak_costChanging(value);
					this.SendPropertyChanging();
					this._off_peak_cost = value;
					this.SendPropertyChanged("off_peak_cost");
					this.Onoff_peak_costChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_peak_cost", DbType="Money")]
		public System.Nullable<decimal> peak_cost
		{
			get
			{
				return this._peak_cost;
			}
			set
			{
				if ((this._peak_cost != value))
				{
					this.Onpeak_costChanging(value);
					this.SendPropertyChanging();
					this._peak_cost = value;
					this.SendPropertyChanged("peak_cost");
					this.Onpeak_costChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weekend_cost", DbType="Money")]
		public System.Nullable<decimal> weekend_cost
		{
			get
			{
				return this._weekend_cost;
			}
			set
			{
				if ((this._weekend_cost != value))
				{
					this.Onweekend_costChanging(value);
					this.SendPropertyChanging();
					this._weekend_cost = value;
					this.SendPropertyChanged("weekend_cost");
					this.Onweekend_costChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_midnight_cost", DbType="Money")]
		public System.Nullable<decimal> midnight_cost
		{
			get
			{
				return this._midnight_cost;
			}
			set
			{
				if ((this._midnight_cost != value))
				{
					this.Onmidnight_costChanging(value);
					this.SendPropertyChanging();
					this._midnight_cost = value;
					this.SendPropertyChanged("midnight_cost");
					this.Onmidnight_costChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_start_coord", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string start_coord
		{
			get
			{
				return this._start_coord;
			}
			set
			{
				if ((this._start_coord != value))
				{
					this.Onstart_coordChanging(value);
					this.SendPropertyChanging();
					this._start_coord = value;
					this.SendPropertyChanged("start_coord");
					this.Onstart_coordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_coord", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string end_coord
		{
			get
			{
				return this._end_coord;
			}
			set
			{
				if ((this._end_coord != value))
				{
					this.Onend_coordChanging(value);
					this.SendPropertyChanging();
					this._end_coord = value;
					this.SendPropertyChanged("end_coord");
					this.Onend_coordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[user]")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _client_id;
		
		private string _email_address;
		
		private string _primary_mobile_number;
		
		private string _secondary_mobile_number;
		
		private string _password;
		
		private int _role_id;
		
		private bool _account_activated;
		
		private EntitySet<trip_detail> _trip_details;
		
		private EntityRef<role> _role;
		
		private EntityRef<client> _client;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onclient_idChanging(int value);
    partial void Onclient_idChanged();
    partial void Onemail_addressChanging(string value);
    partial void Onemail_addressChanged();
    partial void Onprimary_mobile_numberChanging(string value);
    partial void Onprimary_mobile_numberChanged();
    partial void Onsecondary_mobile_numberChanging(string value);
    partial void Onsecondary_mobile_numberChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onrole_idChanging(int value);
    partial void Onrole_idChanged();
    partial void Onaccount_activatedChanging(bool value);
    partial void Onaccount_activatedChanged();
    #endregion
		
		public user()
		{
			this._trip_details = new EntitySet<trip_detail>(new Action<trip_detail>(this.attach_trip_details), new Action<trip_detail>(this.detach_trip_details));
			this._role = default(EntityRef<role>);
			this._client = default(EntityRef<client>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int client_id
		{
			get
			{
				return this._client_id;
			}
			set
			{
				if ((this._client_id != value))
				{
					if (this._client.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onclient_idChanging(value);
					this.SendPropertyChanging();
					this._client_id = value;
					this.SendPropertyChanged("client_id");
					this.Onclient_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email_address", DbType="VarChar(50)")]
		public string email_address
		{
			get
			{
				return this._email_address;
			}
			set
			{
				if ((this._email_address != value))
				{
					this.Onemail_addressChanging(value);
					this.SendPropertyChanging();
					this._email_address = value;
					this.SendPropertyChanged("email_address");
					this.Onemail_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_primary_mobile_number", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string primary_mobile_number
		{
			get
			{
				return this._primary_mobile_number;
			}
			set
			{
				if ((this._primary_mobile_number != value))
				{
					this.Onprimary_mobile_numberChanging(value);
					this.SendPropertyChanging();
					this._primary_mobile_number = value;
					this.SendPropertyChanged("primary_mobile_number");
					this.Onprimary_mobile_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secondary_mobile_number", DbType="VarChar(10)")]
		public string secondary_mobile_number
		{
			get
			{
				return this._secondary_mobile_number;
			}
			set
			{
				if ((this._secondary_mobile_number != value))
				{
					this.Onsecondary_mobile_numberChanging(value);
					this.SendPropertyChanging();
					this._secondary_mobile_number = value;
					this.SendPropertyChanged("secondary_mobile_number");
					this.Onsecondary_mobile_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_role_id", DbType="Int NOT NULL")]
		public int role_id
		{
			get
			{
				return this._role_id;
			}
			set
			{
				if ((this._role_id != value))
				{
					if (this._role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onrole_idChanging(value);
					this.SendPropertyChanging();
					this._role_id = value;
					this.SendPropertyChanged("role_id");
					this.Onrole_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_activated", DbType="Bit NOT NULL")]
		public bool account_activated
		{
			get
			{
				return this._account_activated;
			}
			set
			{
				if ((this._account_activated != value))
				{
					this.Onaccount_activatedChanging(value);
					this.SendPropertyChanging();
					this._account_activated = value;
					this.SendPropertyChanged("account_activated");
					this.Onaccount_activatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_trip_detail", Storage="_trip_details", ThisKey="client_id", OtherKey="user_id")]
		public EntitySet<trip_detail> trip_details
		{
			get
			{
				return this._trip_details;
			}
			set
			{
				this._trip_details.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="role_user", Storage="_role", ThisKey="role_id", OtherKey="id", IsForeignKey=true)]
		public role role
		{
			get
			{
				return this._role.Entity;
			}
			set
			{
				role previousValue = this._role.Entity;
				if (((previousValue != value) 
							|| (this._role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._role.Entity = null;
						previousValue.users.Remove(this);
					}
					this._role.Entity = value;
					if ((value != null))
					{
						value.users.Add(this);
						this._role_id = value.id;
					}
					else
					{
						this._role_id = default(int);
					}
					this.SendPropertyChanged("role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="client_user", Storage="_client", ThisKey="client_id", OtherKey="id", IsForeignKey=true)]
		public client client
		{
			get
			{
				return this._client.Entity;
			}
			set
			{
				client previousValue = this._client.Entity;
				if (((previousValue != value) 
							|| (this._client.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._client.Entity = null;
						previousValue.users.Remove(this);
					}
					this._client.Entity = value;
					if ((value != null))
					{
						value.users.Add(this);
						this._client_id = value.id;
					}
					else
					{
						this._client_id = default(int);
					}
					this.SendPropertyChanged("client");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_trip_details(trip_detail entity)
		{
			this.SendPropertyChanging();
			entity.user = this;
		}
		
		private void detach_trip_details(trip_detail entity)
		{
			this.SendPropertyChanging();
			entity.user = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trip_detail")]
	public partial class trip_detail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<decimal> _cost;
		
		private System.Nullable<int> _user_id;
		
		private string _trip_coordinates;
		
		private System.Nullable<System.DateTime> _datetimestamp;
		
		private System.Nullable<System.DateTime> _request_datetimestamp;
		
		private System.Nullable<int> _trip_type_id;
		
		private System.Nullable<int> _trip_duration;
		
		private EntityRef<user> _user;
		
		private EntityRef<trip_type> _trip_type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OncostChanging(System.Nullable<decimal> value);
    partial void OncostChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void Ontrip_coordinatesChanging(string value);
    partial void Ontrip_coordinatesChanged();
    partial void OndatetimestampChanging(System.Nullable<System.DateTime> value);
    partial void OndatetimestampChanged();
    partial void Onrequest_datetimestampChanging(System.Nullable<System.DateTime> value);
    partial void Onrequest_datetimestampChanged();
    partial void Ontrip_type_idChanging(System.Nullable<int> value);
    partial void Ontrip_type_idChanged();
    partial void Ontrip_durationChanging(System.Nullable<int> value);
    partial void Ontrip_durationChanged();
    #endregion
		
		public trip_detail()
		{
			this._user = default(EntityRef<user>);
			this._trip_type = default(EntityRef<trip_type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cost", DbType="Money")]
		public System.Nullable<decimal> cost
		{
			get
			{
				return this._cost;
			}
			set
			{
				if ((this._cost != value))
				{
					this.OncostChanging(value);
					this.SendPropertyChanging();
					this._cost = value;
					this.SendPropertyChanged("cost");
					this.OncostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._user.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trip_coordinates", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string trip_coordinates
		{
			get
			{
				return this._trip_coordinates;
			}
			set
			{
				if ((this._trip_coordinates != value))
				{
					this.Ontrip_coordinatesChanging(value);
					this.SendPropertyChanging();
					this._trip_coordinates = value;
					this.SendPropertyChanged("trip_coordinates");
					this.Ontrip_coordinatesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datetimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> datetimestamp
		{
			get
			{
				return this._datetimestamp;
			}
			set
			{
				if ((this._datetimestamp != value))
				{
					this.OndatetimestampChanging(value);
					this.SendPropertyChanging();
					this._datetimestamp = value;
					this.SendPropertyChanged("datetimestamp");
					this.OndatetimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_request_datetimestamp", DbType="DateTime")]
		public System.Nullable<System.DateTime> request_datetimestamp
		{
			get
			{
				return this._request_datetimestamp;
			}
			set
			{
				if ((this._request_datetimestamp != value))
				{
					this.Onrequest_datetimestampChanging(value);
					this.SendPropertyChanging();
					this._request_datetimestamp = value;
					this.SendPropertyChanged("request_datetimestamp");
					this.Onrequest_datetimestampChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trip_type_id", DbType="Int")]
		public System.Nullable<int> trip_type_id
		{
			get
			{
				return this._trip_type_id;
			}
			set
			{
				if ((this._trip_type_id != value))
				{
					if (this._trip_type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontrip_type_idChanging(value);
					this.SendPropertyChanging();
					this._trip_type_id = value;
					this.SendPropertyChanged("trip_type_id");
					this.Ontrip_type_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_trip_duration", DbType="Int")]
		public System.Nullable<int> trip_duration
		{
			get
			{
				return this._trip_duration;
			}
			set
			{
				if ((this._trip_duration != value))
				{
					this.Ontrip_durationChanging(value);
					this.SendPropertyChanging();
					this._trip_duration = value;
					this.SendPropertyChanged("trip_duration");
					this.Ontrip_durationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="user_trip_detail", Storage="_user", ThisKey="user_id", OtherKey="client_id", IsForeignKey=true)]
		public user user
		{
			get
			{
				return this._user.Entity;
			}
			set
			{
				user previousValue = this._user.Entity;
				if (((previousValue != value) 
							|| (this._user.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._user.Entity = null;
						previousValue.trip_details.Remove(this);
					}
					this._user.Entity = value;
					if ((value != null))
					{
						value.trip_details.Add(this);
						this._user_id = value.client_id;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("user");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trip_type_trip_detail", Storage="_trip_type", ThisKey="trip_type_id", OtherKey="id", IsForeignKey=true)]
		public trip_type trip_type
		{
			get
			{
				return this._trip_type.Entity;
			}
			set
			{
				trip_type previousValue = this._trip_type.Entity;
				if (((previousValue != value) 
							|| (this._trip_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._trip_type.Entity = null;
						previousValue.trip_details.Remove(this);
					}
					this._trip_type.Entity = value;
					if ((value != null))
					{
						value.trip_details.Add(this);
						this._trip_type_id = value.id;
					}
					else
					{
						this._trip_type_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("trip_type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trip_type")]
	public partial class trip_type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private EntitySet<trip_detail> _trip_details;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public trip_type()
		{
			this._trip_details = new EntitySet<trip_detail>(new Action<trip_detail>(this.attach_trip_details), new Action<trip_detail>(this.detach_trip_details));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="trip_type_trip_detail", Storage="_trip_details", ThisKey="id", OtherKey="trip_type_id")]
		public EntitySet<trip_detail> trip_details
		{
			get
			{
				return this._trip_details;
			}
			set
			{
				this._trip_details.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_trip_details(trip_detail entity)
		{
			this.SendPropertyChanging();
			entity.trip_type = this;
		}
		
		private void detach_trip_details(trip_detail entity)
		{
			this.SendPropertyChanging();
			entity.trip_type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.payment_account")]
	public partial class payment_account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _type_id;
		
		private string _account_number;
		
		private System.Nullable<System.DateTime> _expiration_date;
		
		private EntitySet<client> _clients;
		
		private EntityRef<payment_account_type> _payment_account_type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ontype_idChanging(System.Nullable<int> value);
    partial void Ontype_idChanged();
    partial void Onaccount_numberChanging(string value);
    partial void Onaccount_numberChanged();
    partial void Onexpiration_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onexpiration_dateChanged();
    #endregion
		
		public payment_account()
		{
			this._clients = new EntitySet<client>(new Action<client>(this.attach_clients), new Action<client>(this.detach_clients));
			this._payment_account_type = default(EntityRef<payment_account_type>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type_id", DbType="Int")]
		public System.Nullable<int> type_id
		{
			get
			{
				return this._type_id;
			}
			set
			{
				if ((this._type_id != value))
				{
					if (this._payment_account_type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ontype_idChanging(value);
					this.SendPropertyChanging();
					this._type_id = value;
					this.SendPropertyChanged("type_id");
					this.Ontype_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_account_number", DbType="VarChar(30)")]
		public string account_number
		{
			get
			{
				return this._account_number;
			}
			set
			{
				if ((this._account_number != value))
				{
					this.Onaccount_numberChanging(value);
					this.SendPropertyChanging();
					this._account_number = value;
					this.SendPropertyChanged("account_number");
					this.Onaccount_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expiration_date", DbType="Date")]
		public System.Nullable<System.DateTime> expiration_date
		{
			get
			{
				return this._expiration_date;
			}
			set
			{
				if ((this._expiration_date != value))
				{
					this.Onexpiration_dateChanging(value);
					this.SendPropertyChanging();
					this._expiration_date = value;
					this.SendPropertyChanged("expiration_date");
					this.Onexpiration_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="payment_account_client", Storage="_clients", ThisKey="id", OtherKey="payment_account_id")]
		public EntitySet<client> clients
		{
			get
			{
				return this._clients;
			}
			set
			{
				this._clients.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="payment_account_type_payment_account", Storage="_payment_account_type", ThisKey="type_id", OtherKey="id", IsForeignKey=true)]
		public payment_account_type payment_account_type
		{
			get
			{
				return this._payment_account_type.Entity;
			}
			set
			{
				payment_account_type previousValue = this._payment_account_type.Entity;
				if (((previousValue != value) 
							|| (this._payment_account_type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._payment_account_type.Entity = null;
						previousValue.payment_accounts.Remove(this);
					}
					this._payment_account_type.Entity = value;
					if ((value != null))
					{
						value.payment_accounts.Add(this);
						this._type_id = value.id;
					}
					else
					{
						this._type_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("payment_account_type");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_clients(client entity)
		{
			this.SendPropertyChanging();
			entity.payment_account = this;
		}
		
		private void detach_clients(client entity)
		{
			this.SendPropertyChanging();
			entity.payment_account = null;
		}
	}
}
#pragma warning restore 1591
